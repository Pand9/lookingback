edge cases & error handling:
✔ put fileformat errors within .status file @done(21-05-14 21:22)
    ✔ trackfile @done(21-05-14 18:56)
    ✔ togglfile @done(21-05-14 19:39)
✔ don't parse any files just to open a workspace @done(21-05-11 11:01)
✔ report system errors using `alert`
    ✘ and cli command `get latest logs`
✔ log retency configuration @done(21-05-14 14:29)


togglexport:
✔ define & parse togglfile format @done(21-04-29 14:45)
✔ query for (with and without tasks) upload of entries @done(21-04-29 14:45)
✔ query for deletion of entries @done(21-04-29 14:45)
✔ query for download of entries @done(21-04-29 14:45)
✔ query for download of definitions of clients, projects, tasks @done(21-04-29 14:45)
✔ show toggl system entries & delta @done(21-04-29 14:45)
✔ cache clients, projects & tasks @done(21-04-29 14:45)
✔ let user define human friendly names of toggl projects & tasks @done(21-04-29 14:45)
✔ implement cli workflow with dry-run phase @done(21-04-29 14:46)
✔ show deleted entries in summary @done(21-05-14 22:41)
✔ show validation errors in summary @done(21-05-14 21:23)
✔ relax syntax to support simple "8h dev core-dev work" @done(21-05-14 21:22)
✔ support deleting (exporting empty set) @done(21-05-14 22:41)
✔ support standalone togglexport workspace @done(21-05-14 21:22)
- document syntax
✔ support different toggl accounts @done(21-05-15 12:15)
- safe store for credentials (document it)
✔ batch toggl @done(21-05-14 22:41)
✔ bootstrap vscode tasks @done(21-05-16 15:07)


easyaccess journal:
✔ bootstrap & validate workspace
✔ sort files based on `FINISHED`, `EXPORTED` tags
✔ add cli command to open in vscode
✔ report info about last note time within .status file
✔ support adding time in the short future @done(21-05-15 17:25)
✔ notify of notes getting out of date
✔ autoopen one recent file in vscode
✔ autoopen two recent files @done(21-05-11 11:02)
- run report since last date
✔ document note format
- document directory structure
✔ when moving an empty file to .finished, delete it instead @done(21-05-15 12:44)
✔ batch finish old files @done(21-05-15 12:44)


easyaccess monitors:
✔ main loop @done(21-04-29 14:54)
✔ write to workspace @done(21-04-29 14:54)
✔ xidle
✔ wmctrl
✔ xdotool


easyaccess reporter:
✔ toplist of activities (active window/browser tab, or idle) per total time, for X-minute intervals
✔ special case for chrome tabs, vscode projects etc. with configurable level of detail @done(21-05-11 11:02)
✔ CLI
✔ expose in the main CLI @done(21-05-11 11:03)
✔ include "untracked" in report toplist, and scale the rest to the full time and not tracked time @done(21-05-11 11:03)


runtime environment:
✔ document dependencies @done(21-05-11 11:03)
- document python dependencies and version
    - python-dateutil
    - toml
    - togglpy
    - pyparsing
    - 3.8
- monitor tools
    - xprintidle
    - xdotool
- reporter
    - rustup
- provide bootstrap scripts for setting up screens


future considerations:
- let user somehow define reducer: window name -> aggregate instead of hardcoding
    - second aggregation can be in python
- vscode plugin
    - lint file
- build into a standalone binary

